@using FMS.Web.ViewModels;


@{
    ViewBag.Title = "Alert Management";
    //set UI visibility permissions   
    var canManageAlerts = ((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["ActionManageAlerts"];

}


<div class="container-fluid">

    <div class="row no-gutters h-100 justify-content-center align-items-center" style="background-color: azure; margin-top: 15px; margin-bottom: 15px;  padding: 5px;padding-left: 15px;">
        <div class="col-md-12">
            <div class="formHeadingRegion">
                <h4>@ViewBag.Title</h4>
            </div>
        </div>
    </div>

    <div class="row h-100 justify-content-center align-items-center">

        <div class="col-md-12">
            @(Html.Kendo().Grid<AlertEditViewModel>()
                                                            .Name("gridAlert")
                                                            .Columns(columns =>
                                                            {
                                                                columns.Bound(vm => vm.AlertTypeId).ClientTemplate("#:AlertTypeDisplay#").Width(100);
                                                                columns.Bound(vm => vm.ContactId).ClientTemplate("#:ContactDisplay#").Width(100);
                                                                columns.Bound(vm => vm.EmailDisplay).Width(100);
                                                                columns.Command(command =>
                                                                {
                                                                    command.Edit().Text(" ").UpdateText(" ").CancelText(" ").Visible("canManageAlerts");
                                                                    command.Custom("deleteAlertRecord").Text(" ").Click("onDeleteDetailsClick").IconClass("fas fa-trash-alt").HtmlAttributes(new { @title = "Delete", @style = "min-width:46px;min-height:26px" }).Visible("canManageAlerts");

                                                                }).Title("").Width(140);
                                                            })
                                                            .ToolBar(toolBar =>
                                                            {
                                                                toolBar.Template(@<text>

                                                                    @if (canManageAlerts)
                                                                        {
                                                                        <a class='k-button' style="float:left" href="#" onclick="onAddNewAlert(event)">
                                                                            <span class='k-icon k-i-add'></span>Add New Alert
                                                                        </a>
                                                                        }
                                                                    
                                                                </text>);
                                                            })
                                                    .Editable(editable => editable.Mode(GridEditMode.InLine).DisplayDeleteConfirmation(false))
                                                    .Pageable()
                                                    .Sortable()
                                                    .Scrollable(s => s.Height("auto"))
                                                    .DataSource(dataSource => dataSource
                                                        .Ajax()
                                                        .PageSize(20)
                                                        .Events(events => events
                                                            .Error("onError")
                                                            .RequestEnd("onDataSourceRequestEnd")
                                                        )
                                                        .Model(model =>
                                                        {
                                                            model.Id(vm => vm.Id);
                                                        })
                                                            .Read(read => read.Action("GetAlertList", "VehicleComplianceManagement"))
                                                            .Create(create => create.Action("CreateAlert", "VehicleComplianceManagement"))
                                                            .Update(update => update.Action("UpdateAlert", "VehicleComplianceManagement"))
                                                            .Destroy(delete => delete.Action("DeleteAlert", "VehicleComplianceManagement"))

                                    )
                                        .Events(events => events
                                                .Edit("onGridItemEdit")
                                    )

            )

        </div>
    </div>

    <div id="wndDeleteConfirmation"></div>
</div>
<style>
    .k-grid .field-validation-error {
        display: none;
    }

    span#dtEntryDate_validationMessage {
        z-index: 2;
        position: absolute;
        margin-top: 30px;
        margin-left: -130px;
    }
</style>
@section scripts{
    <script type="text/x-kendo-template" id="templateDeleteConfirmation">
        <div class="modalWindow">
            <h2>Are you sure you want to delete this record?</h2>
            <button id="yes" class="k-button">Yes</button>
            <button id="no" class="k-button k-primary">No</button>
        </div>
    </script>


    <script type="text/javascript">


        var gridData;



        $(document).ready(function () {
            //tooltips
            $("#gridAlert").kendoTooltip({ filter: "a[title]" });

            //initialize the kendo delete confirmation modal window
            templateDeleteConfirmation = kendo.template($("#templateDeleteConfirmation").html());

            windowDeleteConfirmation = $("#wndDeleteConfirmation").kendoWindow({
                title: "Delete Confirmation",
                modal: true,
                visible: false,
                resizable: false,
                width: 300
            }).data("kendoWindow");

            gridData = $("#gridAlert").data("kendoGrid");
        });


        function onDataSourceRequestEnd(e) {

            if ((e.type == "create" || e.type == "update" || e.type == "destroy") && !e.response.Errors) {

                App.notification.show({
                    message: "Changes saved successfully."
                }, "success");

                e.sender.read(); //refresh the datasource
            }
        }

        function onError(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                App.notification.show({
                    message: message
                }, "error");
            }
        }

        function onDeleteDetailsClick(e) {

            e.preventDefault();

            var grid = this;

            var row = $(e.currentTarget).closest("tr");
            var dataItem = this.dataItem(row);

            windowDeleteConfirmation.content(templateDeleteConfirmation(dataItem));

            windowDeleteConfirmation.center().open();

            $("#yes").click(function () {
                grid.removeRow(row); //removes row only
                windowDeleteConfirmation.close();
            });

            $("#no").click(function () {
                windowDeleteConfirmation.close();
            });
        }

        function onGridItemEdit(e) {

            $("#EmailDisplay").data("kendoMaskedTextBox").enable(false);

            if (e.model.isNew()) {

            }


            if (!e.model.isNew()) {

            }

        }

        function onAddNewAlert(e) {
            gridData.addRow();
        }

        function canManageAlerts()
        {
            var r = '@canManageAlerts';

            if (r === "True") {
                return true;
            }
            else {
                return false;
            }
        }

    </script>
    }