@using Microsoft.AspNet.Identity
@using FMS.Common

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />   
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>@ViewBag.Title | PPL FMS</title>
    @{
        var culture = System.Globalization.CultureInfo.CurrentCulture.ToString();
    }
    @Styles.Render("~/Content/css")
    @*@Styles.Render("~/Content/fontawesome/css")*@
    <link rel="stylesheet" type="text/css" href="~/Content/fontawesome/css/all.min.css" media="screen" />
    @Styles.Render("~/Content/kendo/css")
    @Scripts.Render("~/bundles/jquery")
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    @Scripts.Render("~/bundles/kendo")

    <script src="@Url.Content("~/Scripts/kendo/cultures/kendo.culture." + culture + ".min.js")"></script>
    <script type="text/javascript">
        kendo.culture("@culture");
    </script>

    <!--App object stores all global variables for the app. This is seen by site.js as well. -->
    <script type="text/javascript">
        var App = {};
    </script>


    @Scripts.Render("~/Scripts/site.js")
    @Scripts.Render("~/Scripts/coms-hub.js")

    @RenderSection("HeaderScriptsAndStyles", required: false)

</head>
<body id="layout-body">

    <div class="dash-head">
        <!-- toggle button for responsive panel, hidden on large screens -->
        <h1 id="mainHeader"><img id="logo" src="/Content/images/menu/app-logo.png" /><span id="logo-text">PPL Fleet Management System</span></h1>
        <button id="mobile-menu-toggle" class="k-rpanel-toggle"><span class="k-icon k-i-menu"></span></button>
        
    </div>
    <div class="panel-wrap">
        <!-- responsive panel, collapsed on small screens -->
        @(Html.Kendo().ResponsivePanel()
        .Name("sidebar")
        .Breakpoint(1367)                                                
        .Orientation("left")
        .Content(@<text>
                                                
            <div id="profile" class="widget">
                <h3>Profile</h3>
                @Html.Partial("_LoginPartial")
            </div>    
            <div class="widget" id="main-menu">

                @(Html.Kendo().PanelBar()
                                        .Name("main-menu-panelbar")
                                        .HtmlAttributes(new { style = "width:274px;" })
                                        .ExpandMode(PanelBarExpandMode.Single)
                                        .Items(panelbar =>
                                        {
                                            panelbar.Add().Text("Home")
                                                .SpriteCssClasses("fa fa-home")
                                                .Url("/");
                                            panelbar.Add().Text("Security").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["MenuSecurity"])
                                                .SpriteCssClasses("fa fa-lock")
                                                .Items(security =>
                                                {
                                                    security.Add().Text("Manage Roles").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceRole"])
                                                        .SpriteCssClasses("fas fa-users-cog")
                                                        .Url("/Security/Roles");
                                                    security.Add().Text("Manage Permission").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfacePermission"])
                                                        .SpriteCssClasses("fas fa-key")
                                                        .Url("/Security/RolePermissions");
                                                    security.Add().Text("Manage Users").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceManageUsers"])
                                                        .SpriteCssClasses("fas fa-user-friends")
                                                        .Url("/Security/Users");
                                                    security.Add().Text("Center Security").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceCenterSecurity"])
                                                        .SpriteCssClasses("fas fa-user-lock")
                                                        .Url("/Security/CenterSecurity");
                                                    security.Add().Text("Audit Trail").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceAuditTrail"])
                                                        .Url("/Security/AuditTrails")
                                                        .SpriteCssClasses("fas fa-briefcase");
                                                });

                                            panelbar.Add().Text("Organization").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["MenuOrganisation"])
                                                .SpriteCssClasses("fas fa-sitemap")
                                                .Items(organization =>
                                                {
                                                    organization.Add().Text("Manage Staff").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceContacts"])
                                                        .SpriteCssClasses("fas fa-users")
                                                        .Url(@Url.Action("Contacts", "OrganisationManagement",new { message ="NA", isError=false, contactType= (int)Parameters.ContactType.Employee }));
                                                    organization.Add().Text("Manage Suppliers").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceContacts"])
                                                        .SpriteCssClasses("fas fa-truck-loading")
                                                        .Url(@Url.Action("Contacts", "OrganisationManagement", new { message = "NA", isError = false, contactType = (int)Parameters.ContactType.Supplier }));
                                                    organization.Add().Text("Manage Mechanics").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceMechanics"])
                                                        .SpriteCssClasses("fas fa-wrench")
                                                        .Url(@Url.Action("Contacts", "OrganisationManagement", new { message = "NA", isError = false, contactType = (int)Parameters.ContactType.Mechanic }));
                                                    organization.Add().Text("Manage Business Units").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceBusinessUnits"])
                                                        .SpriteCssClasses("fas fa-university")
                                                        .Url(@Url.Action("BusinessUnits", "OrganisationManagement", new { message = "NA", isError = false }));
                                                    organization.Add().Text("Manage Business Groups").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceBusinessGroups"])
                                                        .SpriteCssClasses("fas fa-city")
                                                        .Url(@Url.Action("BusinessGroups", "OrganisationManagement", new { message = "NA", isError = false }));
                                                    organization.Add().Text("Manage Regions").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceRegions"])
                                                        .SpriteCssClasses("fas fa-globe-americas")
                                                        .Url(@Url.Action("Regions", "OrganisationManagement", new { message = "NA", isError = false }));
                                                    organization.Add().Text("Manage Centers").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceCenters"])
                                                        .SpriteCssClasses("fas fa-gopuram")
                                                        .Url(@Url.Action("Centers", "OrganisationManagement", new { message = "NA", isError = false }));
                                                    organization.Add().Text("Company Information").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceClientInformation"])
                                                        .Url("/OrganisationManagement/EditCompany")
                                                        .SpriteCssClasses("fas fa-landmark");
                                                });

                                            panelbar.Add().Text("Parameters").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["MenuParameters"])
                                                .SpriteCssClasses("fas fa-cogs")
                                                .Items(parameters =>
                                                {
                                                    parameters.Add().Text("User Defined Codes").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceUserDefinedCodes"])
                                                        .SpriteCssClasses("fas fa-code")
                                                        .Url("/SystemParameter/SystemParameters");
                                                    parameters.Add().Text("Vehicle Types").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceVehicleTypes"])
                                                        .Url("/SystemParameter/VehicleTypes")
                                                        .SpriteCssClasses("fas fa-shuttle-van");
                                                    parameters.Add().Text("Vehicle Models").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceVehicleModels"])
                                                        .Url("/SystemParameter/VehicleModels")
                                                        .SpriteCssClasses("fas fa-car");
                                                });

                                            panelbar.Add().Text("Vehicle Management").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["MenuVehicleManagement"])
                                                .SpriteCssClasses("fas fa-car")
                                                .Items(vehicle =>
                                                {
                                                    vehicle.Add().Text("Vehicle Registry").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceVehicleRegister"])
                                                        .SpriteCssClasses("fas fa-shipping-fast")
                                                        .Url(@Url.Action("Vehicles", "VehicleManagement") + "?message=NA&isError=false");
                                                    vehicle.Add().Text("BOS Registry").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceViewBOSVehicles"])
                                                        .SpriteCssClasses("fas fa-car")
                                                        .Url("/VehicleManagement/VehiclesBOS");
                                                    vehicle.Add().Text("Disposed Vehicle").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceViewDisposedVehicles"])
                                                        .SpriteCssClasses("fas fa-archive")
                                                        .Url("/VehicleDisposal/VehiclesDisposed");
                                                });
                                            panelbar.Add().Text("Vehicle Allocation").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["MenuAllocationManagement"])
                                                .SpriteCssClasses("fas fa-people-carry")
                                                .Url(@Url.Action("VehicleAllocationMain", "VehicleAllocation") + "?message=NA&isError=false");

                                            panelbar.Add().Text("Service Management").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["MenuServiceManagement"])
                                                .SpriteCssClasses("fas fa-medkit")
                                                .Items(service =>
                                                {
                                                    service.Add().Text("Service Details").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceService"])
                                                        .SpriteCssClasses("fas fa-toolbox")
                                                        .Url(@Url.Action("VehicleServices", "VehicleServiceManagement") + "?message=NA&isError=false");
                                                    service.Add().Text("Schedule Service").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceScheduleService"])
                                                        .SpriteCssClasses("far fa-clock")
                                                        .Url(@Url.Action("VehicleServiceSchedules", "VehicleServiceManagement") + "?message=NA&isError=false");
                                                });

                                            panelbar.Add().Text("Fuel Management").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["MenuFuelManagement"])
                                                .SpriteCssClasses("fas fa-gas-pump")
                                                .Items(fuel =>
                                                {
                                                    fuel.Add().Text("Vehicle Fuel Register").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceFuelRegister"])
                                                        .SpriteCssClasses("fas fa-oil-can")
                                                        .Url(@Url.Action("VehicleRefuels", "VehicleFuelManagement") + "?message=NA&isError=false");
                                                    fuel.Add().Text("Tank Dip Readings").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceBowserDipReadings"])
                                                        .SpriteCssClasses("fas fa-tachometer-alt")
                                                        .Url(@Url.Action("DepotDailyMeasurements", "DepotManagement") + "?message=NA&isError=false");
                                                    fuel.Add().Text("Tank Refuel").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceBowserRefuel"])
                                                        .SpriteCssClasses("fas fa-gas-pump")
                                                        .Url(@Url.Action("DepotRefuels", "DepotManagement") + "?message=NA&isError=false");
                                                    fuel.Add().Text("Tank Status & Setup").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceBowserStatusSetup"])
                                                        .SpriteCssClasses("fas fa-sliders-h")
                                                        .Url(@Url.Action("DepotTanks", "DepotManagement") + "?message=NA&isError=false");
                                                });

                                            panelbar.Add().Text("Incidents").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["MenuIncidentManagement"])
                                                .SpriteCssClasses("fas fa-car-crash")
                                                .Url(@Url.Action("VehicleIncidents", "VehicleIncidentManagement") + "?message=NA&isError=false");

                                            panelbar.Add().Text("Compliance").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["MenuComplianceManagement"])
                                                .SpriteCssClasses("fas fa-balance-scale")
                                                .Items(compliance =>
                                                {
                                                    compliance.Add().Text("Manage Notifications").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceManageNotification"])
                                                        .SpriteCssClasses("fas fa-comments")
                                                        .Url(@Url.Action("Notifications", "VehicleComplianceManagement") + "?message=NA&isError=false");
                                                    compliance.Add().Text("Compliance Dashboard").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceComplianceDashboard"])
                                                        .SpriteCssClasses("fas fa-tachometer-alt")
                                                        .Url(@Url.Action("VehicleComplianceDashboard", "VehicleComplianceManagement"));
                                                    compliance.Add().Text("Registration Registry").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceComplianceEntries"])
                                                        .SpriteCssClasses("fas fa-file-contract")
                                                        .Url(@Url.Action("VehicleRegistrations", "VehicleComplianceManagement") + "?message=NA&isError=false");
                                                    compliance.Add().Text("Safety Sticker Registry").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceComplianceEntries"])
                                                        .SpriteCssClasses("far fa-life-ring")
                                                        .Url(@Url.Action("VehicleSafetyStickers", "VehicleComplianceManagement") + "?message=NA&isError=false");
                                                    compliance.Add().Text("Manage Alert").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceAlerts"])
                                                        .SpriteCssClasses("fas fa-bell")
                                                        .Url(@Url.Action("Alerts", "VehicleComplianceManagement") + "?message=NA&isError=false");
                                                });

                                            panelbar.Add().Text("Reports").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["MenuReports"])
                                                .SpriteCssClasses("fas fa-chart-line")
                                                .Items(report =>
                                                {
                                                    report.Add().Text("Registry Reports").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceRegistryReports"])
                                                        .SpriteCssClasses("fas fa-car")
                                                        .Url(@Url.Action("VehicleRegistryReports", "ReportManagement"));
                                                    report.Add().Text("Service Reports").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceServiceReports"])
                                                        .SpriteCssClasses("fas fa-medkit")
                                                        .Url(@Url.Action("VehicleServiceReports", "ReportManagement"));
                                                    report.Add().Text("Allocation Reports").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceAllocationReports"])
                                                        .SpriteCssClasses("fas fa-people-carry")
                                                        .Url(@Url.Action("VehicleAllocationReports", "ReportManagement"));
                                                    report.Add().Text("Management Reports").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceManagementReports"])
                                                        .SpriteCssClasses("fas fa-chart-pie")
                                                        .Url(@Url.Action("ManagementReports", "ReportManagement"));
                                                    report.Add().Text("Compliance Reports").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceComplianceReports"])
                                                        .SpriteCssClasses("fas fa-balance-scale")
                                                        .Url(@Url.Action("ComplianceReports", "ReportManagement"));
                                                    report.Add().Text("Incident Reports").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceIncidentReports"])
                                                        .SpriteCssClasses("fas fa-car-crash")
                                                        .Url(@Url.Action("VehicleIncidentReports", "ReportManagement"));
                                                    report.Add().Text("Fuel Reports").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceFuelReports"])
                                                       .SpriteCssClasses("fas fa-gas-pump")
                                                       .Url(@Url.Action("FuelManagementReports", "ReportManagement"));
                                                    report.Add().Text("Organization Reports").Visible(((Dictionary<string, bool>)(Session[Session["CurrentUserRole"] + "UIVisibilityList"]))["InterfaceOrganisationReports"])
                                                        .SpriteCssClasses("fas fa-sitemap")
                                                        .Url(@Url.Action("OrganisationReports", "ReportManagement"));
                                                });
                                        })
                )
            </div>

          </text>)
        )

            <div id="main-content">
                <div id="main-body" class="widget">
                    <div>
                        <div id="progressIndicator"></div>

                        @(Html.Kendo().Notification()
                                    .Name("notifyPopup")
                                    .Animation(animation => animation
                                            .Open(effect =>
                                                effect.SlideIn(SlideDirection.Left)
                                            )
                                            .Close(effect =>
                                                effect.SlideIn(SlideDirection.Left).Reverse(true)
                                            )
                                    )
                                    .Position(p => p.Pinned(true).Top(30).Right(30))
                                    .Stacking(NotificationStackingSettings.Down)
                                    .Templates(t =>
                                    {
                                        t.Add().Type("info").ClientTemplateID("infoTemplate");
                                        t.Add().Type("error").ClientTemplateID("errorTemplate");
                                        t.Add().Type("success").ClientTemplateID("successTemplate");
                                    })


                        )
                        <form id="__AjaxAntiForgeryForm" action="#" method="post">@Html.AntiForgeryToken()</form>

                        <script type="text/javascript">
                                $(document).ready(function () {

                                    App.canGetNewServiceJobNumber = true;
                                    App.getNewServiceJobNumberErrorMessage = "";

                                    App.canGetNewFuelVoucherNumber = true;
                                    App.getNewFuelVoucherNumberErrorMessage = "";


                                    App.notification = $("#notifyPopup").data("kendoNotification");
                                    App.notificationMessage = '@ViewBag.NotificationMessage';
                                    App.notificationIsError = '@ViewBag.NotificationIsError';
                                });
                        </script>

                        @RenderBody()


                    </div>
                </div>
                <div id="wndApplicationIssue"></div>
            </div>
    </div>

    <div class="dash-foot">
        <p class="text-muted" style="margin-top: 30px;padding:0px 20px 0px 20px;color:#fff">Fleet Management System Version 2.0.0 &copy; @DateTime.Now.Year. PNG Power Limited. All Rights Reserved. Kindly <a class="reportApplicationIssueLink" href="#">Contact</a> the ICT Department for any issues regarding the use of this application.</p>
    </div>



    <style>

   


    </style>

    <!-- #region Script Templates -->

    <script id="infoTemplate" type="text/x-kendo-template">
        <div class="info-notification">
            <img src='@Url.Content("~/Content/images/notification/envelope.png")' />
            <p>#= message #</p>
        </div>
    </script>

    <script id="errorTemplate" type="text/x-kendo-template">
        <div class="error-notification">
            <img src='@Url.Content("~/Content/images/notification/error-icon.png")' />
            <p>#= message #</p>
        </div>
    </script>

    <script id="successTemplate" type="text/x-kendo-template">
        <div class="success-notification">
            <img src='@Url.Content("~/Content/images/notification/success-icon.png")' />
            <p>#= message #</p>
        </div>
    </script>

    <!-- #endregion -->

    <script type="text/javascript">     

    var wndApplicationIssue;

    function initializeApplicationIssueModelWindow() {

        $("#frmApplicationIssueRegistration").submit(function (event) {
            event.preventDefault();
            ajaxCreateUpdate(this, $("#frmApplicationIssueRegistration #Id").val(), "Home", "CreateApplicationIssue", "", "", wndApplicationIssue);
        });



        $("#btnClose").click(function (e) {
            e.preventDefault();
            wndApplicationIssue.close();
        });


    }

    $(document).ready(function () {

        $("#sign-out-link").click(function (e) {

            $("#logoutForm").submit();
            window.hubReady.done(function () {                
            $.connection.comsHub.server.forceLogOut('@User.Identity.GetUserName()');
            })
        });    

        $("#layout-body").fadeIn("slow");      

        //********************************* Begin -- Application Issue Modal Window ***************************************
        var validator = $("form").kendoValidator().data("kendoValidator");

        $(".reportApplicationIssueLink").click(function (e) {

            e.preventDefault();

            //the bound refresh method of the window object is fired here
            wndApplicationIssue.refresh({
                url: "/Home/ContactUs",
                beforeSend: function (xhr) {
                    //show progress bar
                    kendo.ui.progress($("#progressIndicator"), true);
                },
                complete: function (xhr, status) {
                    kendo.ui.progress($("#progressIndicator"), false);
                }
            });

        });


        //initialize the kendo vehicle disposal modal window
        wndApplicationIssue = $("#wndApplicationIssue").kendoWindow({
            title: "Contact Us",
            modal: true,
            visible: false,
            resizable: false,
            width: 450
        }).data("kendoWindow");

        //because you are loading a view through an action, use the bind to the "refresh" function
        wndApplicationIssue.bind("refresh", function (e) {
            initializeApplicationIssueModelWindow();
            //NB: need to put the center open window in the refresh method coz if you put it outside, the center window fires b4 content is loaded and messes up the UI
            wndApplicationIssue.center().open();
        });

        //********************************* End -- Application Issue Modal Window *****************************************

    });

    </script>

    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)


</body>
</html>
