@using FMS.Common
@using FMS.Web.ViewModels

@{
    ViewBag.Title = "Vehicle Incidents";
}
<div class="container-fluid">

    <div class="row no-gutters h-100 justify-content-center align-items-center" style="background-color: azure; margin-top: 15px; margin-bottom: 15px;  padding: 5px;padding-left: 15px;">
        <div class="col-md-12">
            <div class="formHeadingRegion">
                <h4>@ViewBag.Title</h4>
            </div>
        </div>
    </div>

    <div class="row h-100 justify-content-center align-items-center">
        <div class="col-md-12">

            <fieldset id="fldsVehicleSearch">
                <legend>Search</legend>
                <!--Vehicle Dropdownlist-->

                @(Html.Kendo().DropDownList()
                                                            .Name("drpVehicle")
                                                            .DataValueField("Value")
                                                            .DataTextField("Text")
                                                            .OptionLabel(new { Text = "Select Vehicle...", Value = "" })
                                                            .Filter(FilterType.Contains)
                                                            .ValuePrimitive(true)
                                                            .HtmlAttributes(new { style = "width:170px" })
                                                            .BindTo((System.Collections.IEnumerable)ViewBag.Vehicles)
                )

                <!--Incident Type Dropdownlist-->

                @(Html.Kendo().DropDownList()
                                                            .Name("drpIncidentType")
                                                            .DataValueField("Value")
                                                            .DataTextField("Text")
                                                            .OptionLabel(new { Text = "Select Incident Type...", Value = "" })
                                                            .Filter(FilterType.Contains)
                                                            .ValuePrimitive(true)
                                                            .HtmlAttributes(new { style = "width:170px" })
                                                            .BindTo((System.Collections.IEnumerable)ViewBag.IncidentTypes)
                )




                @(Html.Kendo().MaskedTextBox()
                                                    .Name("txtIncidentFileNumber")
                                                    .HtmlAttributes(new { @placeholder = "Enter Incident File #...", @style = "width:180px;" })
                )



                @(Html.Kendo().Button()
                                                    .Name("btnSearch")
                                                    .HtmlAttributes(new { type = "button", @class = "k-primary" })
                                                     .Content("<span class='k-icon' title='Search'></span>")
                                                    .Icon("search")
                                                    .Events(events =>
                                                    {
                                                        events.Click("onSearchClick");
                                                    })
                )

                @(Html.Kendo().Button()
                                                    .Name("btnReset")
                                                    .Tag("em")
                                                    .Icon("refresh")
                                                    .Content("<span class='k-icon' title='Refresh'></span>")
                                                    .HtmlAttributes(new { @title = "Reset" })
                                                    .Events(events =>
                                                    {
                                                        events.Click("onResetClick");
                                                    })
                )
            </fieldset>

            @(Html.Kendo().Grid<IncidentDisplayViewModel>()
                                                        .Name("gridVehicleIncident")
                                                        .Columns(columns =>
                                                        {
                                                            columns.Bound(vm => vm.IncidentFileNumber).Title("File #").Width(70).Media("(min-width: 992px)");
                                                            columns.Bound(vm => vm.RegistrationNumber).Title("Rego #").Media("(min-width: 544px)").Width(80);
                                                            columns.Bound(vm => vm.Driver).Title("Driver").Width(120).Media("(min-width: 768px)");
                                                            columns.Bound(vm => vm.IncidentDate).Title("Incident Date").Width(90).Media("(min-width: 544px)");
                                                            columns.Bound(vm => vm.DateofAccident).Title("Reported Date").Width(120).Media("(min-width: 544px)");
                                                            columns.Bound(vm => vm.IncidentType).Title("Incident Type").Media("(min-width: 992px)").Width(120);
                                                            columns.Bound(vm => vm.Description).Title("Description").Media("(min-width: 768px)");
                                                            columns.Bound(vm => vm.IncidentStatus).Title("Incident Status").Media("(min-width: 768px)").Width(140);
                                                            columns.Bound(vm => vm.HasReport).Title("Has Report").Media("(min-width: 544px)").Width(90);
                                                            columns.Command(command => command.Custom("download").Text(" ").Click("onDownloadClick").Visible("downloadVisible").IconClass("fas fa-download").HtmlAttributes(new { @title = "Download" })).Width(90).Title("Attachment");

                                                            columns.Template(@<text></text>).ClientTemplate("#=resColTemplate(data)#").Title("Items").Media("(max-width: 544px)");
                                                            columns.Command(command =>
                                            {
                                                command.Custom("view").Text(" ").Click("onViewDetailsClick").IconClass("far fa-eye").HtmlAttributes(new { @title = "View" });
                                                command.Custom("edit").Text(" ").Click("onEditDetailsClick").IconClass("fas fa-edit").HtmlAttributes(new { @title = "Edit" });
                                                command.Custom("delete").Text(" ").Click("onDeleteDetailsClick").IconClass("fas fa-trash-alt").HtmlAttributes(new { @title = "Delete" });
                                            }).Title("").Width(210);
                                                        })
                                                                .ToolBar(toolBar =>
                                                                {
                                                                    toolBar.Template(@<text>
                                                                        <a class='k-button' style="float:left" href="#" onclick="onAddNewVehicleIncidentClick(event)">
                                                                            <span class='k-icon k-i-add'></span>Add New Incident
                                                                        </a>
                                                                    </text>);
                                                                })
                                                                        .Pageable()
                                                                        .Sortable()
                                                                        .Scrollable(s => s.Height("auto"))
                                                                        .DataSource(dataSource => dataSource
                                                                            .Ajax()
                                                                            .PageSize(20)
                                                                            .Events(events => events.Error("onError"))
                                                                            .Model(model => model.Id(vm => vm.Id))
                                                                            .Read(read => read.Action("GetVehicleIncidentList", "VehicleIncidentManagement").Data("gridFilterParams"))

                                                                        )

            )


            <div id="wndDeleteConfirmation"></div>

        </div>
    </div>
</div>
<style>
</style>
@section scripts{
    <script id="templateResponsiveColumn" type="text/x-kendo-template">
        <strong>Incident File No.</strong>
        <p class="col-template-val">#=data.IncidentFileNumber#</p>

        <strong>Rego No.</strong>
        <p class="col-template-val">#=data.RegistrationNumber#</p>

        <strong>Driver</strong>
        <p class="col-template-val">#=data.Driver#</p>

        <strong>Incident Date</strong>
        <p class="col-template-val">#=data.IncidentDate#</p>

        <strong>Incident Report Submission Date</strong>
        <p class="col-template-val">#=data.DateofAccident#</p>

        <strong>Incident Type</strong>
        <p class="col-template-val">#=data.IncidentType#</p>

        <strong>Description</strong>
        <p class="col-template-val">#=data.Description#</p>

        <strong>Incident Status</strong>
        <p class="col-template-val">#=data.IncidentStatus#</p>

    </script>


    <script type="text/x-kendo-template" id="templateDeleteConfirmation">
        <div class="modalWindow">
            <h2>Are you sure you want to delete this vehicle incident record?</h2>
            <button id="yes" class="k-button">Yes</button>
            <button id="no" class="k-button k-primary">No</button>
        </div>
    </script>


    <script type="text/javascript">

    //********************* Begin - Global Document Scope Variables *****************************
    var windowDeleteConfirmation;
    var gridData;
    //*******************************************************************************************


    var resColTemplate = kendo.template($("#templateResponsiveColumn").html());


    $(document).ready(function () {

        templateDeleteConfirmation = kendo.template($("#templateDeleteConfirmation").html());

        gridData = $("#gridVehicleIncident").data("kendoGrid");

        setGridFormSubmitNotification();

        //initialize the kendo delete confirmation modal window
        windowDeleteConfirmation = $("#wndDeleteConfirmation").kendoWindow({
            title: "Delete Confirmation",
            modal: true,
            visible: false,
            resizable: false,
            width: 300
        }).data("kendoWindow");


        //tooltips
        $("#gridVehicleIncident").kendoTooltip({ filter: "a[title]" });
        $("#gridVehicleIncident").kendoTooltip({ filter: "span>i.fas.fa-check[title]" });
        $("#btnReset").kendoTooltip({ content: "Reset" });

    });

    function onDeleteDetailsClick(e) {
        e.preventDefault();

        var grid = this;

        var row = $(e.currentTarget).closest("tr");
        var dataItem = this.dataItem(row);

        windowDeleteConfirmation.content(templateDeleteConfirmation(dataItem));

        windowDeleteConfirmation.center().open();

        $("#yes").click(function () {

            $.when($.ajax({
                type: "POST",
                url: '@Url.Action("CheckIfVehicleIncidentIsInUse","VehicleIncidentManagement")',
                data: { id : dataItem.Id },
                dataType: "json",
                beforeSend: function () {
                    //show progress bar
                    kendo.ui.progress($("#progressIndicator"), true);
                }
            })).done(function (returndata) {
                //hide progress bar
                kendo.ui.progress($("#progressIndicator"), false);

                if (returndata.isError) {
                    App.notification.show({
                        message: returndata.message
                    }, "error");
                }
                else {
                    if (returndata.isInUse) {
                        App.notification.show({
                            message: returndata.message + " Vechicle incident record cannot be deleted."
                        },"info");
                    }
                    else {
                        ajaxDelete(dataItem.Id, "VehicleIncidentManagement","DeleteVehicleIncidentDetails");
                        grid.removeRow(row); //removes row only
                    }

                }

            });


            windowDeleteConfirmation.close();
        });

        $("#no").click(function () {
            windowDeleteConfirmation.close();
        });
    }

function downloadVisible(dataItem) {
    if (dataItem.IncidentFileName)
    {
        return true;
    }
    else
    {
        return false;
    }
}

function onDownloadClick(e) {
    e.preventDefault();
    var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
    window.location.href = '@Url.Action("DownloadFile", "VehicleIncidentManagement")?fileName=' + dataItem.IncidentFileName;
}

    function onError(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            App.notification.show({
                message: message
            }, "error");
        }
    }


    function gridFilterParams() {

        return {

            incidentFileNumber: $("#txtIncidentFileNumber").val(),
            incidentType: (Number($("#drpIncidentType").val()) == 0) ? -1 : Number($("#drpIncidentType").val()),
            vehicleId: (Number($("#drpVehicle").val()) == 0) ? -1 : Number($("#drpVehicle").val())
        }
    }
    function onSearchClick(e) {
        e.preventDefault();
        gridData.dataSource.read();
    }
    function onResetClick(e) {
        e.preventDefault();
        $("#txtIncidentFileNumber").val("");
        $("#drpVehicle").data("kendoDropDownList").value("");
        $("#drpIncidentType").data("kendoDropDownList").value("");
        gridData.dataSource.read();
    }

    function onEditDetailsClick(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var id = dataItem.Id;
        window.location.href = '@Url.Action("EditVehicleIncidentDetails", "VehicleIncidentManagement")?id=' + id;
    }
    function onAddNewVehicleIncidentClick(e) {
        e.preventDefault();
        window.location.href = '@Url.Action("CreateVehicleIncidentDetails", "VehicleIncidentManagement")';
    }
    function onViewDetailsClick(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var id = dataItem.Id;
        window.location.href = '@Url.Action("ViewVehicleIncidentDetails", "VehicleIncidentManagement")?id=' + id;
    }

    </script>
    }